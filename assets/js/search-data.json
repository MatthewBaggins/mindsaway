{
  
    
        "post0": {
            "title": "Hedonic Drive",
            "content": "When you get better at accomplishing the goals you set for yourself, you may encounter an unobvious failure mode. At some point, you may realize that your motivation for doing certain things becomes more and more tightly entangled with having them done rather than doing them. In other words, although once you enjoyed them just for their own sake, you can begin viewing them more and more as something that&#39;s instrumental for getting satisfaction from knowing that you accomplished your goal and fulfilled your plan. . Recently, I realized that I had experienced something like that many times over the last few years without realizing that basically the same mechanism had manifested in all of these cases. Whether it was working out, dieting, playing guitar, learning math, programming, or writing, once I implemented some kind of system to keep myself on track, some part of my internal motivation started to wane. . To put it differently, my motivation started to flow more and more from the desire to accomplish some particular goal I had set for myself. The better I get in planning, time-management, et cetera, the more I tend to rely on the pleasure associated with feelings like: . I finally did it! . | I&#39;m almost there, just one more... . | All goals for this week have been accomplished -- system shut-down, complete. . | . ...rather than: . This (thing that I&#39;m doing right now) is awesome/interesting . | I want to learn more about this! . | I&#39;m fulfilled by what I just created and it was a lot of fun . | . I think this strongly parallels how people tend to lose enthusiasm about their passions, once they start getting consistently paid for doing it. Money can easily dethrone intrinsic motivation, to the point that it may be hard to restore it, once financial incentive is removed. From my experience, the same often occurs in the schooling system degrading student&#39;s curiosity and replacing pursuit of knowledge and understanding as something desirable in itself with incentives to cram the material just to get good grades, appreciation from teachers or other authorities and a piece of paper that asserts you being a Master of Science. . Still, we shouldn&#39;t throw the baby out with the bathwater. Systems can be extremely helpful for getting better and more consistent results, whether you want to refine some specific skill, create a habit of working out, or whatever it is you care about. However, they shouldn&#39;t replace intrinsic motivation with narrow-minded fixation on goals. Rather, they should strengthen this motivation by feeding it stronger signals related to doing something enjoyable with greater skill, better final products of your work, and even ability to immerse yourself in the moment when you are doing the thing. . Some suggestions for how we can help ourselves retain our internal motivation when/if it starts competing with external forces which are supposed to push us in the same direction: . Minimum pressure principle | Most of the time, you want to push yourself a little, but not too much. As Piotr Woźniak writes: . There is a dramatic increase in value at little pressure (high return on low investment of teaching, tutoring, mentoring, etc.). The optimum usually falls at very low levels of pressure (might be much higher for some kids). There is a quick decline in development speed in the zone where adding pressure diminishes outcomes. The optimum push zone is richest in the sense of accomplishment, and provides for a cumulative increase in enthusiasm, passion, interest, and knowledge. . If you feel anxious and/or stressed about the story you write, that&#39;s definitely not a viable long-term strategy. You probably aren&#39;t going to stick to your system, and if you do, it will neither pleasant nor very satisfying. . On the other hand, if you often think something like &quot;Crap, I really don&#39;t feel like jogging/writing right now, but I commited myself to it, so I&#39;m going to do it anyway&quot; but after you spend 5 to 10 minutes doing it, you start enjoying it and recall why you wanted to it in the first place, then you are probably in the vicinity of what Woźniak calls &quot;the optimum push zone&quot;. . Lower your tolerance for (certain kinds of) discomfort | Closely related to the previous point. If the intrinsically-desirable-thingy you are trying to systematize starts causing you more discomfort/distress/anxiety than pleasure/satisfaction/eudaimonia, you probably should re-evaluate your strategy. The less good feelings you associate with the thingy, the less reward signal you get from the thingy itself. And the less reward signal you get from it, the more you rely on reward signal coming from the system, i.e. knowledge that you accomplished X, regardless of what X is and why(if?) you care about it. . Also, keep in mind that your values, preferences, and objectives change over time. Don&#39;t feel obliged to spend an hour every day on writing, even if it has been a torture for the last two months and you don&#39;t seem to enjoy it, no matter how you try to approach it. (But also don&#39;t make the (reverse mistake)[https://www.readthesequences.com/ReversedStupidityIsNotIntelligence] and don&#39;t abandon a new workout routine after you wake up sore for the first time). . Keep your system simple | The system is not a goal in itself. It should never be a goal in itself. It is just a tool and tools are supposed to be as simple as possible for their function. . At a point when increasing your system&#39;s complexity starts increasing the costs of using and maintaining it more quickly than its benefits, hold yourself back and stay with the simpler variant. (Yes, complexity is not a single dimension and one thing can increase or decrease its complexity in many ways, some of which are better than others, but you get the point). . The more complex your system is, the more time and cognitive effort you need to spend to keep it running. The more you invest in it, the more reward signal you get from it, and are distracted from intrinsic motivation related to that activity. . So start simple. If you&#39;re a complete beginner, start absurdly simple. Grab a piece of paper and a pencil and write down three things that you want to do this week and are less than 80% likely to do. Practice on small things first to build form. Once you get accustomed to it and feel like you need something more sophisticated, start adding more things, prioritizing them, automatization, making your system digital. Some templates like Getting Things Done may turn out useful for you. But let each adjustment be relatively small and incremental. . Once we learn to like our hammers, we start seeing everything as nails. Once we learn to like our systems and start feeling very comfortable using them, we may be tempted to automatize everything. If you write down and make everything explicit, the system becomes much more complicated than it needs to be and thus less useful. From my experience, in this case it&#39;s better to apply a relatively conservative approach and err on the side of caution. We tend to overestimate how much we will benefit from adding one more thread of complexity. . Focus your system on overcoming bottlenecks/improving your weak points | Related to the first point. If you find it hard to put on your running shoes and start jogging, you may benefit from systematizing it in some way, e.g. making a goal of jogging for at least 5 minutes a day and having a spreadsheet where you can see how your most recent streak has been. However, if once you get going, you very quickly get into the flow and can keep running for 15, 30, or 60 minutes, then you probably don&#39;t need to keep track of how the distance you run each day. . Ask yourself &quot;what prevents me from X?&quot;, &quot;what are my specific weak points? and then think about possible ways to overcome them. Needless to say, Murphyjitsu is highly recommended. Once you find something that works, consider that maybe this is enough and you don&#39;t need to upgrade this system. Once you remove one, two, or three primary obstacles, you probably exploited most of the low-hanging fruits and you will be better off investing your time and energy in improving something else. .",
            "url": "https://matthewbaggins.github.io/mindsaway/jupyter/2021/04/10/hedonic-drive.html",
            "relUrl": "/jupyter/2021/04/10/hedonic-drive.html",
            "date": " • Apr 10, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://matthewbaggins.github.io/mindsaway/jupyter/2021/04/09/notebook-tutorial.html",
            "relUrl": "/jupyter/2021/04/09/notebook-tutorial.html",
            "date": " • Apr 9, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "2021.04.03 | Possibly useful braindump",
            "content": "For the last few weeks I&#39;ve been going through the Training Regime Sequence, 5 days per week. Yesterday I processed Day 20: OODA Loop. . In short, OODA Loop is a simple algorithm/(C)TAP/mental habit, which helps you appropriately react to different situations. You Observe - take information from the environment. Then you Orient yourself in this environment, i.e. use that information to find possible actions. Then you Decide which one is best (i.e. has the expected utility according to some specified goal) and Act. Hence, OODA. . Each one of these seems obvious. They are obvious. Even linking them in this order may seem obvious. Nevertheless, it is an incredibly useful concept to have available in the back of your mind and teaching your unconscious to implement this algorithm whenever you find yourself in a novel situation can be immensely helpful. . (The entire sequence contains many such things that seem obvious but which we tend to use less often than it would be optimal) . But the most important thing (to point out) about the OODA loop is the fact that it is a loop. You do not stop and rest on laurels after acting. You repeat the loop. You observe again to assess how well the outcome matches your preference, re-orient yoursel... rinse and repeat until you run out of resources or decide that it&#39;s good enough. . If I had to represent this as a piece of code, it wouldn&#39;t look like this. . def OODA(): data = observe(environment) actions = orient(data) optimal_action = decide(actions, preferences) act(optimal_action) if confused: OODA() . But rather like this: . while satisfaction_criterion &lt; satisfaction_threshold and resources &gt; resources_threshold: OODA() . Later in the post, Mark enumerates through 8 common modes of failure people commit when implementing OODA (which we all do to some extent, whether we have this concept or not). The last one is the least obvious and also the one I&#39;m most prone to: Failure in Act -&gt; Observe. My planning accuracy has been getting much better over the last few months but I still tend to overestimate how much I can do in a given timespan (especially I tend to neglect the possibility of random events reducing my ability to concentrate, e.g. all of a sudden I need to babysit my 4 year old brother). The most intuitive reaction for me is to tighten up and press the Try Harder Button, but this rarely works and when it does, it often makes me exhausted and thus the overall result is net worse, once I take into account my subjective well-being. The better response (actually, the only sensible alternative) would be to repeat the loop. I observed, oriented, decided, and acted, but my initial plan didn&#39;t survive the contact with reality. . You press act. . If you succeed, awesome. . If you don&#39;t succeed. Don&#39;t keep pressing act, because it&#39;s highly likely that the plan was flawed. . Repeat the loop. Re-Observe. Re-Orient. Re-Decide. . And then Act, instead of reacting by pressing Try Harder. .",
            "url": "https://matthewbaggins.github.io/mindsaway/jupyter/2021/04/03/Possibly-useful-braindump.html",
            "relUrl": "/jupyter/2021/04/03/Possibly-useful-braindump.html",
            "date": " • Apr 3, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Knee-jerks in chicken retinas",
            "content": "The patellar reflex/knee-jerk is a simple involuntary reaction. In response to a sudden stretch of the patellar tendon, the quadriceps muscle contracts and straightens the knee. The brain is not involved - the spinal cord (more specifically: segments 1 (L2, L3, and L4, which control this part of the body) sends a motor command directly to the muscle upon receiving sensory information from the knee, without consulting the central nervous system. . . Something similar can be found in retinas of most vertebrates: a &quot;low-level&quot; neural structure receiving visual information and immediately feeding back to the retina without involvement of &quot;high-level&quot; regions. Although in some groups this centrifugal visual system (it&#39;s called that because the information flows not just from the retina[to the center] but also back to the retina[from the center]) consists of barely a handful of neurons2, other animals have developed a much more sophisticated wiring, possibly pointing to a vital role it may play in their case. . The most developed centrifugal visual system known is found in granivorous (i.e. seed-eating) birds. In their case, the role equivalent to the spinal cord is played by a small structure called the isthmooptic nucleus (ION) located very close to the optic tectum (OT)3, the most basic visual structure in birds. This proximity is not accidental because ION completely depends on OT for its input. According to our current best knowledge the process looks something like this: . When retina detects a fast moving shadow-like shape in the lower visual field, it sends this information to the OT. | The OT relays it to the ION. | The ION projects back to the same retina but to its ventral part, observing the upper visual field - sky, not the ground, like the part that initiated the loop. | Specialised cells4 in the ventral retina project to the cells in the dorsal retina, thus closing the entire loop. | . What could possibly be the function of this strange loop? Since these birds often fall prey to aerial predators (such as eagles), some researchers suggested that it may be an &quot;early warning system&quot;. The dorsal retina detects a fast moving shadow - a sign of some object directly above, possibly a danger. The loop allows it to inform the ventral retina to scan the corresponding region of the sky in search for a predator which may have cast this shadow. At the same time, the intra-retinal connection allows both retinal halves to coordinate and efficiently look for signs of danger in the sky as well as on the ground. . If this hypothesis is true, the retina-OT-ION-retina loop would be one of the most interesting examples of how the nervous system can fine-tune to the particular demands of the environment of the species - in this case, the high likelihood of falling prey to a predator hunting from the sky. . References: . Everything I learned about the avian centrifugal visual system (as well as the second figure included in this post) comes from: . Güntürkün, O., Stacho, M., &amp; Ströckens, F. (2020). The Brains of Reptiles and Birds. In J. H. Kaas (Ed.), Evolutionary Neuroscience (2nd ed., pp. 159-212). London: Elsevier Academic Press. . 1. These segments are also called neuromeres.↩ . 2. We are one such species.↩ . 3. The mammalian equivalent of the optic tectum are the superior colliculi but in primates they serve only secondary function. For us, the most important visual structure beyond the neocortex is the lateral geniculate nucleus.↩ . 4. These are so called amacrine cells (vide: image), distinct from the photoreceptors (rodes and cones) and ganglion cells (which send the information to structures beyond the retina). As far as I remember there are about 20 kinds of amacrine cells, possibly pointing to a diversity of roles they perform.↩ .",
            "url": "https://matthewbaggins.github.io/mindsaway/jupyter/2020/11/29/knee-jerks-in-avian-retinas.html",
            "relUrl": "/jupyter/2020/11/29/knee-jerks-in-avian-retinas.html",
            "date": " • Nov 29, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Seeing as a snake",
            "content": "Some snakes see the world differently than we do. And I don&#39;t mean &quot;just&quot; seeing with a different color palette or processing visual information in different parts of the brain$^1$. Some snakes, specifically pit vipers (like rattlesnakes) and several kinds of constrictors (such as boas and pythons) literally see not only with their eyes but also with pairs of tiny holes located on the front of their skulls. . These holes are facial pits–unique sensory organs specialized for remote sensing of temperature. Imagine being able to feel the precise temperature of an object from several meters away, just by looking at it. That&#39;s what two groups of snakes, Crotalinae (pit vipers, which include rattlesnakes) and Boidae (boids, which include some of the largest and the heaviest living [as well as some extinct] species of snakes) are capable of. What&#39;s interesting is that these two taxa evolved basically the same infrared-sensing organs independently of one another, giving as yet another example of convergent evolution. . Despite many similarities, facial pits of boids and pit vipers differ considerably. First, they differ in number and size. Pit vipers have one big facial pit at each side of the skull, located between the nostril and the eye (they are called loreal pits), whereas boids have three or more pairs of pits lining up their lips (therefore called labial pits from Latin labium meaning &quot;lip&quot;) and their pits are smaller than those of their Crotalinae cousins$^2$. Further differences can be seen in the inside. In both lineages the pit consists of a chamber with sensory membrane, densely innervated and vascularized. The membrane is sensitive to the most subtle changes in the chamber air temperature (as little as $0.001^ circ C$)$^1$. Because the chamber is shielded quite well from the external environment, its temperature can be raised only via infrared radiation coming from the object that the snake currently &quot;looks&quot; at with its pit. . A temperature change triggers an electric impulse which travels via the trigeminal nerve to the central nervous system. However, once the membrane&#39;s temperature has been raised, it now needs to be cooled down, which is achieved differently by pit vipers and boas$^2$. In pit vipers, the membrane is suspended between two separate chambers so that after being heated by the temperature change in the anterior chamber (open to the external environment) it can be quickly cooled down by slightly colder air from the posterior chamber (lacking contact with the external environment). In boas, this is not possible, since their sensory membranes are not suspended between the two chambers but rather line up the posterior wall of a single chamber1. Therefore they need to rely on blood supply for cooling down the membrane, bringing it back to the &quot;default&quot; temperature of the organism as approximated by the temperature of the blood. . Once the temperature change is detected it travels, both in Crotalinae and Boidae, to the optic tectum$^1$–main visual center in the brains of birds2 and reptiles (although serves only a secondary role in visual processing in human brains). On the way, we can see one more difference between the two lineages: in boas, the signal is sent straight to the optic tectum whereas in pit vipers it is relayed via a small nucleus reticularis caloris of the medulla. It&#39;s worth mentioning that the nerve which transmits the IR information is the trigeminal nerve which in humans (and, as far as I know, all vertebrates) transmits predominantly the somatosensory information from the face and innervates the jaw muscles. The part that in pit vipers and boids adapted to transmitting IR information detaches from the remaining part (which on its own connects to somatosensory and motor nuclei) to join the optic tectum. In my opinion, it is a beautiful example of how the nervous system can evolve and adapt to the everchanging demands of the environment. . What&#39;s even more remarkable is how smoothly this infrared information integrates with the visual stimuli from the eyes. Many cells in the optic tectum are bimodal visuo-thermal neurons, sensitive to both the &quot;visible&quot; light and the infrared radiation coming from a particular place in the field of view$^1$. Some of them respond only when both kinds of stimuli are present, for some either one is enough, yet another types of neurons respond to visual stimuli but get silenced by a thermal stimulus (or vice versa). This deep visuo-thermal integration is maintained and relayed to the downstream visual areas to which the optic tectum projects. . From this we can assume with relatively high degree of certainty that snakes see not just with their eyes but also with their facial pits. . All snakes lead a predatory lifestyle, so it&#39;s not surprising that they use thermoception to hunt warm-blooded prey such as mammals and birds. Indeed, some experiments shown that even a blind rattlesnake can hunt somewhat succesfully relying on its facial pits alone$^3$. However, this is not the only way they can be useful. At least some species of rattlesnakes use them for regulating their body temperature, which they achieve mostly by relocating from a place that is too hot or too cold to one where the temperature is closer to optimal. However, their facial pits are only sensitive to temperature changes of the moving objects. How then do they see the temperature of the stationary environment? Well, they move it themselves, or more precisely, create a relative motion with scanning head movements$^1$. . 1. Maybe boas could not evolve suspended membranes (as rattlesnakes did) simply because they had not had enough space in their pits to divide them into two separate chambers (which are smaller than those of rattlesnakes).↩ . 2. It birds it has grown so much that it is often called the visual lobe although, unlike lobes in the human brain, it is a part of the midbrain (mesencephalon) and not the cerebral cortex.↩ . References . Güntürkün, O., Stacho, M., &amp; Ströckens, F. (2020). The Brains of Reptiles and Birds. In J. H. Kaas (Ed.), Evolutionary Neuroscience (2nd ed., pp. 159-212). London: Elsevier Academic Press. | https://web.archive.org/web/20161228022254/http://www.nature.com/news/2010/100314/full/news.2010.122.html | Kardong, K., &amp; Mackessy, S. (1991). The Strike Behavior of a Congenitally Blind Rattlesnake. Journal of Herpetology, 25(2), 208-211. doi:10.2307/1564650 |",
            "url": "https://matthewbaggins.github.io/mindsaway/jupyter/2020/11/18/Seeing-as-a-snake.html",
            "relUrl": "/jupyter/2020/11/18/Seeing-as-a-snake.html",
            "date": " • Nov 18, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Right now I’m not really sure what I’m doing here, but I want (and I’m going to) blog about stuff that interests me, including (but not limited to): . Artificial Intelligence and Machine Learning | Neuroscience | Cognitive Science / Psychology | Biology | Fantasy &amp; Science-fiction | Math, history, languages, and whatever else sparks fascination in me | .",
          "url": "https://matthewbaggins.github.io/mindsaway/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://matthewbaggins.github.io/mindsaway/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}